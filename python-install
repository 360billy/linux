第一步系统安装
1网卡设置
Vim 或者vi /etc/network/interfaces
内容如下：
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).
# The loopback network interface（配置环回口）
# 开机自动激lo接口
auto lo
# 配置lo接口为环回口
iface lo inet loopback
# The primary network interface （配置主网络接口）
#开机自动激活eth0接口
auto eth0
#配置eth0接口为静态设置IP地址
iface eth0 inet static
address 210.14.66.206
netmask 255.255.255.224
gateway 210.14.266.222
#network 10.16.3.0
#broadcast 10.16.3.255

# dns-* options are implemented by the resolvconf package, if installed（DNS设置）
dns-nameservers 202.96.199.132 202.96.199.133 
dns-search fireteam.org
配置完成后，重启计算机或者重启网卡/etc/init.d/networking restart

dns配置：
1、配置文件/etc/resolv.conf
2示例 nameserver 203.95.1.2

2. 修改apt-get网络源
http://jingyan.baidu.com/article/6079ad0e6357fc28fe86db46.html

3.系统升级
apt-get update
apt-get upgrade
升级完成后查看debian系统版本号命令：cat /etc/debian_version

4. 升级中文显示（有的系统需要配置中文显示语言包）
http://blog.csdn.net/hekejun19861107/article/details/6411576
      5.安装环境 
  apt-get install -y wget sudo htop vim curl zip unzip   
第二步升级python
先在python2下安装supervisor 
安装setuptools 
http://www.cnblogs.com/lanxuezaipiao/archive/2012/10/21/2732864.html
https://www.python.org/ftp/python/3.4.2/Python-3.4.2.tgz
现在版本基本上是3.4.2
下载完成后到下载目录下，解压
tar -xvf Python-3.4.2.tgz
tar -xvf /mnt/tool/Python-3.4.2.tgz -C /mnt/tool解压到/mnt/tool目录
进入解压缩后的文件夹
cd Python-3.4.2
在编译前先在/usr/local建一个文件夹python3（作为python的安装路径，以免覆盖老的版本）mkdir /usr/local/python3
开始编译安装
./configure --prefix=/usr/local/python34
make
make install
装完以后可以输入 python 查python的版本号
测试python：
python -m test
 
第三步安装pip 
官网下载最新版本的pip1.5.6的安装包，找到相关目录，然后python setup.py install
(tar -xvf /mnt/tool/pip-1.5.6.tar.gz -C /mnt/tool)
装完以后必须找到 /usr/bin下面的pip文件，如果没有pip，那就ln -s /usr/local/python34/bin/pip  /usr/bin/pip这个相当于一个shell命令的链接，vim,将里面的pip版本改成pip 1.5.6，这一点相当重要，影响到后面的安装。
输入pip -h  看情况
 pip --version

(sudo python get-pip.py
http://www.cnblogs.com/yangxia-test/p/4160022.html)

从pip的官方网站wget下载到服务器，也可以点击下载
wget https://bootstrap.pypa.io/get-pip.py
二、授权并执行安装，可以看到主要安装了argparse-1.4.0 pip-7.1.2 setuptools-18.3.2 wheel-0.26.0这4个包
 

第四步安装tornado
官网下载最新版本的tornado4.0.2的安装包，tar -xvf  tornado-4.0.2.tar.gz   找到相关目录，然后python setup.py install
测试tornado:
python -m tornado.test

第五步 python运行环境的相关安装
安装mysql.connector
cdm
然后直接输入：pip3 install -U --allow-external mysql-connector-python mysql-connector-python
或者：pip install --allow-external mysql-connector-python mysql-connector-python
或者下载了mysql-connector-python-2.0.4.zip
unzip /root/mysql-connector-python-2.0.4.zip
进入安装源码目录python setup.py install
I solved it this way: download the zipped package from here and follow this set of instructions:
https://pypi.python.org/pypi/mysql-connector-python
unzip  /path/to/downloads/folder/mysql-connector-python-VER.zip  
In case u got a .gz u can use ->
tar xzf mysql-connector-python-VER.tar.gz 
cd mysql-connector-python-VER
sudo python3 setup.py install # NOTICE I USED PYTHON3 INSTEAD OF PYTHON


安装sqlalchemy：
cmd-- pip install sqlalchemy
或者cmd进入安装源码目录python setup.py install

安装requests：
pip install requests
sudo apt-get install python3-pil
安装image 图片操作，验证码
pip install image    

第六步安装nginx
http://nginx.org/en/download.html
tar -xvf  nginx-1.11.8.tar.gz
./configure 
make
make install
  

配置文件的存放路径在 /etc/nginx/conf.d
把nginx加入到系统服务，并开机自己启动的方法
将shell脚本放入到 /etc/init.d/中，并执行下列命令
1：chmod +x /etc/init.d/nginx （设置可执行权限）
2：chkconfig --add nginx （添加系统服务）
 

第七步 supervisor配置
由于supervisor只支持python2.*,在python3.*下的安装方法如下：
下载supervisor安装包
解压supervisor
进入supervisor目录文件夹
python2 setup.py install

tar -xvf supervisor-3.1.3.tar.gz
cd /root/supervisor-3.1.3
python2 setup.py install



python2.*下安装情况如下：
pip install supervisor

安装最新版本，跟其他一样，找到相关目录，python install setup.py
http://blog.csdn.net/beerium/article/details/8721906
Supervisor 有两个可执行程序– supervisord 和 supervisorctl:
supervisord 是后台管理服务器, 用来依据配置文件的策略管理后台守护进程, 它会随系统自动启动
supervisorctl 用于管理员向后台管理程序发送启动/重启/停止等指令;

安装完成后
输入supervisord 再输入version即可看到版本号
supervisord --version 
 
第八步配置站点及验证
•	将站点文件放在var/aaa.www里
•	在/etc/supervisor/conf.d/aaa.conf  配置站点文件
•	在/etc/nginx/conf.d/default.conf 配置nginx反向代理文件
•	在/etc/rc.local文件里配置supervisor自启动 
/usr/local/bin/supervisord  -c /etc/supervisor/supervisord.conf
•	重启机器可以验证是否配置正确


第九步数据库安装及备份
 
mysql –version
dpkg -l mysql-server
安装完成后可以通过本地的workbench进行连接测试
Web服务器连接数据库服务器设置：
grant all on *.* to user@"%" identified by "password"; 
flush privileges;
msyql默认的bind-address是127.0.0.1，这样的话就算你创建的用户有可以remote访问的话 也不能通过-h 来访问，mysql只接受localhost，错误提示为：ERROR 2003 (HY000): Can't connect to MySQL server on 'localhost' (10061)

配置文件my.cnf bind-address后面增加远程访问IP地址或者禁掉这句话就可以让远程机登陆访问了。
设好了iptables后怎样让它永久生效
 https://zhidao.baidu.com/question/1895214288523930060.html
问题：Could not connect the SSH Tunnel 
Authentication error, unhandled exception caught in in 
tunnel manager, please refer to logs for details 
 
自动备份：
http://blog.csdn.net/hzbigdog/article/details/38434667
•	先创建shell脚本，放置在/etc/cron.daily/mysql-backup(创建脚本：nano /etc/cron.daily/mysql-backup)
•	增加执行权限：chmod +x /etc/cron.daily/mysql-backup
•	创建备份文件根目录：mkdir /mnt/tf-card/mysql-back/
或者：
•	在/usr/local/mytask/新建一个 crontab的定时执行的文件，放置在自己的目录，例如/usr/local/mytask/crontab:
输入命令crontab -e
然后输入： 0 0 * * * /etc/cron.daily/mysql-backup start 保存为/usr/local/crontab  
然后crontab -u root /usr/local/mytask/crontab 则将这个文件拷贝到crontabs目录下，就可以在凌晨0点执行
•	然后再 /etc/rc.local文件里配置cron自启动，并指定启动的目录即可
代码如下：
service cron start
crontab -u root /usr/local/mytask/crontab

crontab –l –u root  查询定时任务列表
